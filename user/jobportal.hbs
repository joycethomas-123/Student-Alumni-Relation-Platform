<style>
    .jobss{
       background-color: rgba(255, 255, 255, 0.8);
       width: 100%;margin-top: 50px;
       margin-bottom: 50px;
       border-radius: 20px;
       border: none;
       box-shadow: 0 0px 4px rgba(0, 0, 0, 0.6);
    }

    .request_button{
        width: 100%;
        padding: 10px;
        border-radius: 20px;
        background-color: rgb(38, 82, 164);
        font-weight: 700;
        text-decoration: none;
        color: white;
    }
    .request_button:hover{
        border-radius: 20px;
        color: white;
    }

    .btn_sort{
        margin-left: auto;
        background-color: rgb(93, 138, 222);
        padding: 8px;
        color: white;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }
    .btn_sort:hover{
        background-color: rgb(43, 92, 182);
        color: white;
    }

    body{
        background-image: url('/images/logo_transparent1.png');
        background-size: 70% auto;
        background-position: center bottom 55%;
        background-repeat: no-repeat;
        background-color: aliceblue;
        background-attachment: fixed;
    }
    @media (max-width: 768px) {
        body {
            background-image: url('/images/logo1.png');
            background-position: center bottom 40%;
        }
    }
    .sec-top{
        padding-top: 170px; 
        display: flex; 
        justify-content: flex-end;
    }

    .jobDetail{
        font-weight: 500;
    }

    .profile_image_jobportal{
        width: 50px;
        border-radius: 50%;
    }

    .job_posted_name{
        font-weight: bolder;
    }

    @media (max-width: 400px) {
        .profile_image_jobportal{
            width: 40px;
            border-radius: 50%;
        }

        .job_posted_name{
            font-weight: bolder;
            font-size: 15px;
        }
    }


    @media (max-width: 1251px) {
        .sec-top{
        padding-top: 150px; 
    }
    }
    @media (max-width: 550px) {
        .sec-top{
            padding-top: 145px; 
        }
    }
    @media (max-width: 1199px) {
        .btn_sort{
            font-size: 14px;
        }
    }
     @media (max-width: 767px) {
        .btn_sort{
            font-size: 13px;
            font-weight: 500;
            padding: 6px;
        }
    }
    @media (max-width: 500px) {
        .btn_sort{
            font-size: 12px;
            font-weight: 500;
            padding: 5px;
        }
    }
</style>

<section class="sec-top" >
    {{#if machinesort}}
        <a href="/job_portal" class="btn btn_sort">Sort based on time (newest first)</a>
    {{/if}}
    {{#if timesort}}
        <a href="/jobportal" class="btn btn_sort">Sort based on your preference</a>
    {{/if}}
</section>
<section class="container" >
    {{#each jobs}}
    <div class="card jobss" >
        <img class="card-img-top" src="/job-images/{{this._id}}.jpg" alt="No image available">
        <div class="card-body">
            <h5 style="font-weight:bold;" class="card-title">Job Details</h5><br>
            <h6><strong>Company Name</strong></h6>
            <p class="card-text jobDetail">{{this.CompanyName}}</p>
            {{#if this.CompanyDescription}}
            <h6><strong>Company Description</strong></h6>
            <p class="card-text jobDetail">{{this.CompanyDescription}}</p>
            {{/if}}
            <h6><strong>Job Role</strong></h6>
            <p class="card-text jobDetail">{{this.Jobrole}}</p>
            <h6><strong>Eligibility</strong></h6>
            <p class="card-text jobDetail">{{this.Eligibility}}</p>
            {{#if this.JobLink}}
                <a href="{{this.JobLink}}" class="btn btn-primary" style="margin-bottom:20px;">Apply</a>
            {{/if}}
            <h6 style=""><strong>Posted by : </strong></h6>
            <div style="display: inline-block;padding:20px">
                {{#if this.PostedBy}}
                <a href="/view-profile/{{this.UserId}}">
                {{/if}}
                    <img class="profile_image_jobportal profileImageAlternate" src="/user-images/{{this.UserId}}.jpg" alt="Card image cap" style="width: 50px;height: 50px;border-radius: 50%;object-fit:contain">
                {{#if this.PostedBy}}
                </a>
                {{/if}}
            </div>
            <div style="display: inline-block;">
                {{#if this.PostedBy}}
                    <a style="text-decoration: none;color:black;" href="/view-profile/{{this.UserId}}">
                {{/if}}
                    <p class="job_posted_name">{{this.Name}}</p>
                {{#if this.PostedBy}}
                </a>
                {{/if}}
            </div>
            <div style="display: flex;border-radius:20px;background-color:white;">
                    <a  href="javascript:void(0)" onclick="sendJobRequest('{{../userId}}','{{this._id}}', this)" class="btn  request_button" data-request="{{#if this.not_requested}}not_requested{{/if}}{{#if this.requested}}requested{{/if}}">{{#if this.not_requested}}Send request{{/if}}{{#if this.requested}}requested{{/if}}</a>
            </div>
        </div>
    </div>
    {{/each}}
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const profileImages = document.querySelectorAll('.profileImageAlternate');
        profileImages.forEach(img => {
            const imageUrl = img.src;
            fetch(imageUrl)
                .then(response => {
                    if (!response.ok) {
                        img.src = "/user-images/user.png";
                    }
                })
                .catch(error => {
                    console.error("Error fetching image:", error);
                    img.src = "/user-images/user.png";
                });
        });
    });

    function sendJobRequest(userId, job_id, button) {
    fetch('/send_job_request', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ userId: userId, job_id: job_id })
    })
        .then(response => {
            if (response.ok) {
                // Update button status and color based on current status
                const requestData = button.getAttribute('data-request');
                if (requestData === 'not_requested') {
                    button.textContent = 'Requested';
                    button.classList.remove('btn-primary');
                    button.classList.add('btn-secondary');
                    button.setAttribute('data-request', 'requested');
                } else if (requestData === 'requested') {
                    button.textContent = 'Send request';
                    button.classList.remove('btn-secondary');
                    button.classList.add('request_button');
                    button.setAttribute('data-request', 'not_requested');
                }
            } else {
                console.error('Failed to send job request');
            }
        })
        .catch(error => {
            console.error('Error sending job request:', error);
        });
}
</script>
<script>
     function sendTimestampOnUnload() {
        const timestamp = new Date().toISOString();
        fetch('/send_timestamp_leave_jobportal', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ timestamp }),
        });
        //window.location.reload();
    }
    window.addEventListener('beforeunload', sendTimestampOnUnload);
</script>